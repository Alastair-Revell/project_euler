# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
#  By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

import numpy as np
from math import sqrt

range = np.arange(0,1001)
result = 0
list = []
x = 1

def fibonacci(n):
    return ((1+sqrt(5))**n-(1-sqrt(5))**n)/(2**n*sqrt(5))

while True:
    result =  np.around(fibonacci(x))
    if result >= 4000000:
        break
    x += 1
    list.append(result)

print(sum(x for x in list if x%2 == 0))
